<?php
/**
 * Created by PhpStorm.
 * User: sabine
 * Date: 16/05/2018
 * Time: 10:54
 */

namespace MainBundle\Controller;

use MainBundle\Entity\Formation;
use MainBundle\Form\FormationType;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use MainBundle\Service\FileUploader;
class FormationController extends Controller
{

    public function catalogueAction(Request $request)
    {
        $formation = new Formation();
        $form = $this->createForm(FormationType::class, $formation);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {

            $file = $formation->getImage();
            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

            // moves the file to the directory where brochures are stored
            $file->move(
                $this->getParameter('image_directory'),
                $fileName
            );

            // updates the 'brochure' property to store the PDF file name
            // instead of its contents
            $formation->setImage($fileName);

            // ... persist the $product variable or any other work

            return $this->redirect($this->generateUrl('catalogue'));
        }
        $em = $this->getDoctrine()->getEntityManager();

        $form= $em->getRepository('MainBundle:Formation')->findAll();


        return $this->render('MainBundle:Elearning:catalogue.html.twig', array(
            'form' => $form,
        ));
    }
    public function afficherAction($id)
    {
        $em = $this->getDoctrine()->getEntityManager();

        $form= $em->getRepository('MainBundle:Formation')->findBy(array('id'=>$id,));

        return $this->render('MainBundle:Formation:Formation.html.twig', array(
            'form' => $form,
        ));

    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
}